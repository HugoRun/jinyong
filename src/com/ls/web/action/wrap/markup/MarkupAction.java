/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ls.web.action.wrap.markup;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.ls.ben.dao.info.partinfo.CoordinateDao;
import com.ls.ben.vo.info.effect.PropUseEffect;
import com.ls.model.user.RoleEntity;
import com.ls.web.service.goods.prop.PropUseService;
import com.ls.web.service.player.RoleService;
import com.ls.web.service.room.RoomService;

/** 
 * MyEclipse Struts
 * Creation date: 09-04-2008
 * 
 * XDoclet definition:
 * @struts.action parameter="cmd" validate="true"
 * @struts.action-forward name="markup_display" path="a"
 */
public class MarkupAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	//显示标记道具标记情况
	public ActionForward n1(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String w_type = request.getParameter("w_type");
		String pg_pk = request.getParameter("pg_pk");
		String prop_id = request.getParameter("goods_id");
		
		if( prop_id==null || w_type==null  )
		{
			
		}
		StringBuffer resultWml = new StringBuffer();
		
		RoleService roleService = new RoleService();
		RoleEntity roleInfo = roleService.getRoleInfoBySession(request.getSession());
		
		
		
		CoordinateDao coordinateDao = new CoordinateDao();
		
		int scene_id = coordinateDao.getCoordinate(roleInfo.getBasicInfo().getPPk(), Integer.parseInt(prop_id));
		String scene_name = null;
		if( scene_id==-1 )
		{
			resultWml.append("您还没有做标记");
			request.setAttribute("isMarkup", "false");
		}
		else
		{
			RoomService roomService = new RoomService();
			scene_name = roomService.getName(scene_id);
			resultWml.append("您已在"+scene_name+"做了标记");
		}
		
		
		request.setAttribute("resultWml", resultWml.toString());
		request.setAttribute("w_type", w_type);
		request.setAttribute("pg_pk", pg_pk);
		request.setAttribute("prop_id", prop_id);
		return mapping.findForward("markup_display");
	}
	
	//标记
	public ActionForward n2(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	{
		String w_type = request.getParameter("w_type");
		String pg_pk = request.getParameter("pg_pk");
		String prop_id = request.getParameter("goods_id");
		
		RoleService roleService = new RoleService();
		RoleEntity roleInfo = roleService.getRoleInfoBySession(request.getSession());
		
		
		PropUseService propUseService = new PropUseService();
		PropUseEffect propUseEffect = propUseService.usePropByPropGroupID(roleInfo, Integer.parseInt(pg_pk), 1);
		
		if( propUseEffect.getNoUseDisplay()!=null )
		{
			request.setAttribute("isMarkup", "isMarkup");
		}
		request.setAttribute("resultWml", propUseEffect.getNoUseDisplay());
		
		request.setAttribute("w_type", w_type);
		request.setAttribute("pg_pk", pg_pk);
		request.setAttribute("prop_id", prop_id);
		return mapping.findForward("markup_display");
	}
	
	//传送 
	public ActionForward n3(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	{
		RoleService roleService = new RoleService();
		RoleEntity roleInfo = roleService.getRoleInfoBySession(request.getSession());
		
		String pg_pk = request.getParameter("pg_pk");
		String prop_id = request.getParameter("goods_id");
		
		
		CoordinateDao coordinateDao = new CoordinateDao();
		//标记使用标记道具
		coordinateDao.useProp(roleInfo.getBasicInfo().getPPk(), Integer.parseInt(prop_id));
		PropUseService propUseService = new PropUseService();
		propUseService.usePropByPropGroupID(roleInfo, Integer.parseInt(pg_pk), 1);
		
		return mapping.findForward("walk");
	}
}