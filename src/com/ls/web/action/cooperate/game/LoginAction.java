/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ls.web.action.cooperate.game;

import com.ben.vo.logininfo.LoginInfoVO;
import com.ls.pub.config.GameConfig;
import com.ls.pub.constant.Channel;
import com.ls.web.service.cooperate.dangle.PassportService;
import com.ls.web.service.login.LoginService;
import com.lw.service.systemnotify.SystemNotifyService;
import com.lw.vo.systemnotify.SystemNotifyVO;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

/**
 * MyEclipse Struts Creation date: 06-18-2009
 * <p>
 * XDoclet definition:
 *
 * @struts.action validate="true"
 */
public class LoginAction extends Action {
    /**
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
        // 判断游戏的状态
        if (GameConfig.getGameState() == 2) {
            // 游戏状态为上线内部测试状态
            // 动态公告
            SystemNotifyService systemNotifyService = new SystemNotifyService();
            SystemNotifyVO first_notify_info = systemNotifyService.getFirstNotifyInfo();
            request.setAttribute("first_notify_info", first_notify_info);
            return mapping.findForward("game_test_state");
        }

        LoginService loginService = new LoginService();
        // 判断在线人数是否达到上线
        if (loginService.isFullOnlineRoleNum()) {
            // 在线人数已达系统设置上线
            return mapping.findForward("user_num_limit_hint");
        }

        String login_ip = request.getRemoteAddr();
        String login_params = request.getQueryString();
        String qudao = request.getParameter("qudao");
        String super_qudao = request.getParameter("super_qudao");
        String user_name = request.getParameter("user_name");
        String user_pwd = request.getParameter("user_pwd");

        PassportService passportService = new PassportService();
        int u_pk = passportService.loginFromGame(user_name, user_pwd, login_ip, qudao, super_qudao);

        if (u_pk == -1) {
            return mapping.findForward("fail");
        }
        HttpSession session = request.getSession();
        if (GameConfig.jmsIsOn()) {
            LoginInfoVO liv = passportService.findByUpk(u_pk);
            if (liv == null) {
                return mapping.findForward("fail");
            } else {
                if (liv.getQudao() == null || liv.getQudao().trim().isEmpty() || liv.getSuper_qudao() == null || liv.getSuper_qudao().trim().isEmpty() || "null".equals(liv.getQudao().trim()) || "null".equals(liv.getSuper_qudao().trim())) {
                    // 如果没有渠道
                    if (qudao == null || super_qudao == null || super_qudao.trim().isEmpty() || qudao.trim().isEmpty() || "null".equals(qudao.trim()) || "null".equals(super_qudao.trim())) {
                        return mapping.findForward("error");
                    } else {
                        passportService.updateQudao(u_pk, super_qudao, qudao);
                        session.setAttribute("qudao", qudao);
                        session.setAttribute("super_qudao", super_qudao);
                    }
                } else {
                    session.setAttribute("qudao", liv.getQudao());
                    session.setAttribute("super_qudao", liv.getSuper_qudao());
                }
            }
        }
        login_params = login_params.replaceAll("&", "&amp;");
        session.setAttribute("uPk", u_pk + "");
        session.setAttribute("user_name", user_name);
        session.setAttribute("channel_id", Channel.WANXIANG + "");
        session.setAttribute("login_params", login_params);// 登陆参数
        return mapping.findForward("success");
    }
}